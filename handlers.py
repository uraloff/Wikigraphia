from aiogram.types import Message, CallbackQuery
import keyboards as kb
from aiogram import Router, F
import photos
import countries


router = Router()


@router.message(F.text == '/start')
async def start(message: Message):
    username = message.from_user.first_name
    await message.answer(f'–ó–¥–∞—Ä–æ–≤–∞ <strong>{username}</strong>! –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–µ. –ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–µ', parse_mode='HTML', reply_markup=kb.main_kb)


@router.message(F.text.in_({'–ü–æ–º–æ—â—å ‚ùóÔ∏è', '/help'}))
async def proccess_if_help(message: Message):
    await message.answer("–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–µ. –í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã, –∞ —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é —Ç–µ–±–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–µ\n- —á—Ç–æ–±—ã –±–æ—Ç —Ä–∞–±–æ—Ç–∞–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ—Å—Ç–∞—Ä–∞–π—Å—è –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω –±–µ–∑ –æ—à–∏–±–æ–∫\n\n<strong>–ü—Ä–∏–º–µ—Ä:</strong>\n‚ùå –£–∑–±, UZB, O'zbekiston, Uzbekistan, üá∫üáø;\n‚úÖ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω, —É–∑–±–µ–∫–∏—Å—Ç–∞–Ω.\n- –≤—Å–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –±–µ—Ä—É—Ç—Å—è –∏–∑ –í–∏–∫–∏–ø–µ–¥–∏–∏\n- –µ—Å–ª–∏ –∑–∞–º–µ—Ç–∏–ª(-–∞) –æ—à–∏–±–∫—É, –ø—Ä–æ—Å–∏–º –ø—Ä–æ–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ–± —ç—Ç–æ–º –∞–¥–º–∏–Ω—É –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –±–æ—Ç–∞\n- –µ—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω–∞, –∞ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏ –µ—â—ë –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–æ, –ø—Ä–æ—Å–∏–º –æ–± —ç—Ç–æ–º —Ç–æ–∂–µ –ø—Ä–æ–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å\n\n<strong>–í–∞–∂–Ω–æ!</strong>\n–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞, –ø—Ä–∏ —ç—Ç–æ–º –º—ã –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ–º –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ –°–ú–ò, –º—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞—Ö)", parse_mode='HTML')
    

@router.message(F.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚úÖ')
async def main_menu_process(message: Message):
    await message.answer('–ß—Ç–æ –∏—â–µ–º?', reply_markup=kb.main_menu)
#    @router.message(F.text == '–£–∫—Ä–∞–∏–Ω–∞')
#    async def check_countries(message: Message):
#        if message.text == '–£–∫—Ä–∞–∏–Ω–∞':
#            await message.answer_photo(photo=photos.ukr_photo.name, 
#                                       caption=f'üè≥Ô∏è –°—Ç—Ä–∞–Ω–∞: {countries.ukr.name}\n‚≠êÔ∏è –°—Ç–æ–ª–∏—Ü–∞: {countries.ukr.capital}\nüìÖ –î–∞—Ç–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {countries.ukr.indday}\nüî† –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —è–∑—ã–∫: {countries.ukr.lang}\nüé∂ –ì–∏–º–Ω: {countries.ukr.anthem}\n‚õ≥Ô∏è –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è: {countries.ukr.area}\nüëë –§–æ—Ä–º–∞ –ø—Ä–∞–≤–ª–µ–Ω–∏—è: {countries.ukr.gov}\nüë• –°–æ—Å–µ–¥–∏: {countries.ukr.neighbors}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –∫–æ–¥: {countries.ukr.tel_code}\n‚ò¶Ô∏è –†–µ–ª–∏–≥–∏—è: {countries.ukr.religion}\nüë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ù–∞—Å–µ–ª–µ–Ω–∏–µ: {countries.ukr.population}\nüí∞ –í–∞–ª—é—Ç–∞: {countries.ukr.currency}\nüïê –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {countries.ukr.time_zone}\nüåê –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–¥–æ–º–µ–Ω: {countries.ukr.net_domain}\nüìù –û–ø–∏—Å–∞–Ω–∏–µ: {countries.ukr.about}')



@router.callback_query(F.data == 'info')
async def cb_info(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('–í–≤–µ–¥–∏ —Å—Ç—Ä–∞–Ω—É:', reply_markup=kb.search_menu_1)
    await callback.message.delete()

@router.callback_query(F.data == 'symbol')
async def cb_symbol(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('–ö–∞–∫—É—é –∏–∑ –Ω–∏—Ö?', reply_markup=kb.symbols_menu)
    await callback.message.delete()
    

@router.callback_query(F.data == 'back_1')
async def cb_back_1(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('–ß—Ç–æ –∏—â–µ–º?', reply_markup=kb.main_menu)
    await callback.message.delete()


@router.callback_query(F.data == 'flag')
async def cb_flag(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('–í–≤–µ–¥–∏ —Å—Ç—Ä–∞–Ω—É:', reply_markup=kb.search_menu_3)
    await callback.message.delete()
@router.callback_query(F.data == 'emblem')
async def cb_emblem(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('–í–≤–µ–¥–∏ —Å—Ç—Ä–∞–Ω—É:', reply_markup=kb.search_menu_3)
    await callback.message.delete()
@router.callback_query(F.data == 'anthem')
async def cb_anthem(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('–í–≤–µ–¥–∏ —Å—Ç—Ä–∞–Ω—É:', reply_markup=kb.search_menu_3)
    await callback.message.delete()
@router.callback_query(F.data == 'back_2')
async def cb_back_2(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('–ß—Ç–æ –∏—â–µ–º?', reply_markup=kb.main_menu)
    await callback.message.delete()


@router.callback_query(F.data == 'back_3')
async def cb_back_3(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('–ö–∞–∫—É—é –∏–∑ –Ω–∏—Ö?', reply_markup=kb.symbols_menu)
    await callback.message.delete()

        
@router.callback_query(F.data == 'main_menu_ikb')
async def cb_main_menu_ikb(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('–ß—Ç–æ –∏—â–µ–º?', reply_markup=kb.main_menu)
    await callback.message.delete()
@router.callback_query(F.data == 'help_ikb')
async def cb_help_ikb(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer("–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–µ. –í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã, –∞ —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é —Ç–µ–±–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–µ\n- —á—Ç–æ–±—ã –±–æ—Ç —Ä–∞–±–æ—Ç–∞–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ—Å—Ç–∞—Ä–∞–π—Å—è –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω –±–µ–∑ –æ—à–∏–±–æ–∫\n\n<strong>–ü—Ä–∏–º–µ—Ä:</strong>\n‚ùå –£–∑–±, UZB, O'zbekiston, Uzbekistan, üá∫üáø;\n‚úÖ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω, —É–∑–±–µ–∫–∏—Å—Ç–∞–Ω.\n- –≤—Å–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –±–µ—Ä—É—Ç—Å—è –∏–∑ –í–∏–∫–∏–ø–µ–¥–∏–∏\n- –µ—Å–ª–∏ –∑–∞–º–µ—Ç–∏–ª(-–∞) –æ—à–∏–±–∫—É, –ø—Ä–æ—Å–∏–º –ø—Ä–æ–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ–± —ç—Ç–æ–º –∞–¥–º–∏–Ω—É –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –±–æ—Ç–∞\n- –µ—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω–∞, –∞ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏ –µ—â—ë –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–æ, –ø—Ä–æ—Å–∏–º –æ–± —ç—Ç–æ–º —Ç–æ–∂–µ –ø—Ä–æ–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å\n\n<strong>–í–∞–∂–Ω–æ!</strong>\n–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞, –ø—Ä–∏ —ç—Ç–æ–º –º—ã –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ–º –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ –°–ú–ò, –º—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞—Ö)", parse_mode='HTML')
    await callback.message.delete()


@router.message()
async def else_situation(message: Message):
#    await message.reply('–í—Ä–æ–¥–µ —Ç–∞–∫–æ–π —Å—Ç—Ä–∞–Ω—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚úÖ", —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ "–ü–æ–º–æ—â—å ‚ùóÔ∏è", —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –ø—Ä–∞–≤–∏–ª–∞', reply_markup=kb.main_ikb)
    await message.answer_photo(photo=photos.uzb_photo.name)

